services:
  postgres:
    image: postgres:16-alpine
    container_name: aegisx-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: aegisx_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_INITDB_ARGS: '--encoding=UTF8 --locale=C'
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - aegisx-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d aegisx_db']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  postgres-test:
    image: postgres:16-alpine
    container_name: aegisx-postgres-test
    restart: unless-stopped
    environment:
      POSTGRES_DB: aegisx_db_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_INITDB_ARGS: '--encoding=UTF8 --locale=C'
    ports:
      - '5433:5432'
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    networks:
      - aegisx-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d aegisx_db_test']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: aegisx-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@aegisx.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - '8080:80'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - aegisx-network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  postgres_test_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  aegisx-network:
    driver: bridge
